openapi: 3.0.1
info:
  title: Adzerk Management API
  description: Adzerk Management API
  version: '1.0'
servers:
  - url: 'https://api.adzerk.net'
tags:
  - name: advertisers
    description: Manage Advertisers
  - name: campaigns
    description: Manage Campaigns
  - name: flights
    description: Manage Flights
  - name: creatives
    description: Manage Creatives
  - name: ads
    description: Manage Ads (Creative/Flight Maps)
  - name: creative templates
    description: Manage Creative Templates
paths:
  /v1/advertiser:
    post:
      tags:
        - advertisers
      description: Create Advertiser
      operationId: createAdvertiser
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertiser'
      responses:
        200:
          description: Advertiser Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
    get:
      tags:
        - advertisers
      description: List Advertisers
      operationId: listAdvertisers
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Paged list of Advertisers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserList'
  '/v1/advertiser/{advertiserId}':
    put:
      tags:
        - advertisers
      description: Update Advertiser
      operationId: updateAdvertiser
      security:
        - ApiKeyAuth: []
      parameters:
        - name: advertiserId
          in: path
          description: Id of the Advertiser to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertiser'
      responses:
        200:
          description: Updated Advertiser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
    get:
      tags:
        - advertisers
      description: Get a single Advertiser by Id
      operationId: getAdvertiser
      security:
        - ApiKeyAuth: []
      parameters:
        - name: advertiserId
          in: path
          description: Id of the Advertiser to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The Advertiser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
  /v1/advertiser/search:
    post:
      tags:
        - advertisers
      description: Search Advertisers
      operationId: searchAdvertisers
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                advertiserName:
                  type: string
      responses:
        200:
          description: Paged list of Advertisers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserList'
  '/v1/advertiser/{advertiserId}/trackingCode':
    get:
      tags:
        - advertisers
      description: Get Tracking Code for an Advertiser
      operationId: getTrackingCode
      security:
        - ApiKeyAuth: []
      parameters:
        - name: advertiserId
          in: path
          description: Id of the Advertiser to generate Tracking Code for
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Tracking Code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingPixel'
  /v1/campaign:
    post:
      tags:
        - campaigns
      description: Create Campaign
      operationId: createCampaign
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        200:
          description: Campaign Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
    get:
      tags:
        - campaigns
      description: List Campaigns
      operationId: listCampaigns
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Paged list of Campaigns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignList'
  '/v1/campaign/{campaignId}':
    put:
      tags:
        - campaigns
      description: Update Campaign
      operationId: updateCampaign
      security:
        - ApiKeyAuth: []
      parameters:
        - name: campaignId
          in: path
          description: Id of the Campaign to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        200:
          description: Updated Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
    get:
      tags:
        - campaigns
      description: Get a single Campaign by Id
      operationId: getCampaign
      security:
        - ApiKeyAuth: []
      parameters:
        - name: campaignId
          in: path
          description: Id of the Campaign to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
  /v1/campaign/search:
    post:
      tags:
        - campaigns
      description: Search Campaigns
      operationId: searchCampaigns
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                campaignName:
                  type: string
      responses:
        200:
          description: Paged list of Campaigns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignList'
  '/v1/campaign/{campaignId}/flight':
    get:
      tags:
        - campaigns
      description: Get Campaign with Flights
      operationId: getCampaignWithFlights
      security:
        - ApiKeyAuth: []
      parameters:
        - name: campaignId
          in: path
          description: Id of the Campaign to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
  /v1/flight:
    post:
      tags:
        - flights
      description: Create Flight
      operationId: createFlight
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flight'
      responses:
        200:
          description: Flight Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
    get:
      tags:
        - flights
      description: List Flights
      operationId: listFlights
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Paged list of Flights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightList'
  '/v1/flight/{flightId}':
    put:
      tags:
        - flights
      description: Update Flight
      operationId: updateFlight
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: Id of the Flight to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flight'
      responses:
        200:
          description: Updated Flight
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
    get:
      tags:
        - flights
      description: Get Flight
      operationId: getFlight
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: Id of the Flight to update
          required: true
          schema:
            type: integer
        - name: excludeAds
          in: query
          description: Flag to exclude Ads (Creative/Flight Maps) from the results
          schema:
            type: boolean
      responses:
        200:
          description: The Flight
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
  '/v1/fast/flight':
    get:
      tags:
        - flights
      description: Filtered Flights
      operationId: filterFlights
      security:
        - ApiKeyAuth: []
      parameters:
        - name: isActive
          in: query
          schema:
            type: boolean
        - name: isArchived
          in: query
          schema:
            type: boolean
        - name: beforeStartDate
          in: query
          schema:
            type: string
            format: date-time
        - name: afterStartDate
          in: query
          schema:
            type: string
            format: date-time
        - name: beforeEndDate
          in: query
          schema:
            type: string
            format: date-time
        - name: afterEndDate
          in: query
          schema:
            type: string
            format: date-time
        - name: NoEndDate
          in: query
          schema:
            type: boolean
        - name: name
          in: query
          schema:
            type: string
        - name: nameContains
          in: query
          schema:
            type: string
      responses:
        200:
          description: Line-delimited JSON objects
          content:
            text:
              schema:
                type: string
  /v1/creative:
    post:
      tags:
        - creatives
      description: Create Creative
      operationId: createCreative
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      responses:
        200:
          description: Creative Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
  '/v1/creative/{CreativeId}/upload':
    post:
      tags:
        - creatives
      description: Upload Creative Image
      operationId: uploadCreativeImage
      security:
        - ApiKeyAuth: []
      parameters:
        - name: CreativeId
          in: path
          description: The Id of the Creative to upload an image for
          required: true
          schema:
            type: integer
            format: int32
        - name: sizeOverride
          in: query
          description: Add this to upload an image that is a different dimension than the creative's `adTypeId`
          schema:
            type: boolean
        - name: fieldName
          in: query
          description: Specifies which image field (of Type `File`) the file will be uploaded to. Can be used with single-image and multiple-image templates. If a template has only one image, `fieldName` is not required.
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Creative Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
  '/v1/creative/{CreativeId}':
    put:
      tags:
        - creatives
      description: Update Creative
      operationId: updateCreative
      security:
        - ApiKeyAuth: []
      parameters:
        - name: CreativeId
          in: path
          description: The Id of the Creative to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      responses:
        200:
          description: Creative Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
    get:
      tags:
        - creatives
      description: Get Creative
      operationId: getCreative
      security:
        - ApiKeyAuth: []
      parameters:
        - name: CreativeId
          in: path
          description: The Id of the Creative to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The requested Creative
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
  '/v1/advertiser/{AdvertiserId}/creatives':
    get:
      tags:
        - creatives
      description: List Creatives by Advertiser
      operationId: listCreativesByAdvertiser
      security:
        - ApiKeyAuth: []
      parameters:
        - name: AdvertiserId
          in: path
          description: Advertiser Id to list Creatives for
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Paged list of Creatives for the Advertiser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeList'
  '/v1/flight/{flightId}/creative':
    post:
      tags:
        - ads
      description: Create new Ad
      operationId: createAd
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: The Flight to be mapped
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
    get:
      tags:
        - ads
      description: List Ads for a Flight
      operationId: listAdsByFlight
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: The Flight to be mapped
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A paged list of Ads
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdList'
  '/v1/flight/{flightId}/creative/{adId}':
    put:
      tags:
        - ads
      description: Update an existing Ad
      operationId: updateAd
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: The Id of the Flight for the Ad to be updated
          required: true
          schema:
            type: integer
            format: int32
        - name: adId
          in: path
          description: The Id of the Ad to be updated
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
      responses:
        200:
          description: The updated Ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
  '/v1/ad/{adId}':
    get:
      tags:
        - ads
      description: Get an existing Ad
      operationId: getAd
      security:
        - ApiKeyAuth: []
      parameters:
        - name: adId
          in: path
          description: The Id of the Ad to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The existing Ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
  '/v1/ad/{adId}/tracking-urls':
    get:
      tags:
        - ads
      description: Get the tracking pixel and click Url for an Ad
      operationId: getAdTrackingUrls
      security:
        - ApiKeyAuth: []
      parameters:
        - name: adId
          in: path
          description: The Id of the Ad to get
          required: true
          schema:
            type: integer
            format: int32
        - name: siteId
          in: query
          description: The site in your network where the impression and/or click should be tracked. The site must be eligible to serve the ad (i.e. the ad's flight belongs to a channel the site is associated with).
          schema:
            type: integer
            format: int32
        - name: zoneId
          in: query
          description: An optional zone where the impression and/or click should be tracked. Must belong to the `siteid`.
          schema:
            type: integer
            format: int32
        - name: keywords
          in: query
          description: A comma separated string of keywords, like `foo,bar,baz`, that will be tracked in reporting with the click and/or impression. Keywords must not contain [disallowed characters defined in the keyword documentation](https://dev.adzerk.com/docs/keyword-targeting#section-keywords-and-special-characters).
          schema:
            type: string
      responses:
        200:
          description: The requested tracking urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingDetails'
  '/v2/creative-templates':
    post:
      tags:
        - creative templates
      description: Create new Creative Template
      operationId: createCreativeTemplate
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeTemplate'
      responses:
        200:
          description: The newly created Creative Template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeTemplate'
    get:
      tags:
        - creative templates
      description: List Creative Templates
      operationId: listCreativeTemplates
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: A paged list of Creative Templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeTemplateList'
  '/v2/creative-templates/{creativeTemplateId}':
    get:
      tags:
        - creative templates
      description: Get an existing Creative Template
      operationId: getCreativeTemplate
      security:
        - ApiKeyAuth: []
      parameters:
        - name: creativeTemplateId
          in: path
          description: The Id of the Creative Template to update
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The Creative Template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeTemplate'
  '/v2/creative-templates/{creativeTemplateId}/update':
    post:
      tags:
        - creative templates
      description: Update an existing Creative Template
      operationId: updateCreativeTemplate
      security:
        - ApiKeyAuth: []
      parameters:
        - name: creativeTemplateId
          in: path
          description: The Id of the Creative Template to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeTemplateUpdate'
      responses:
        200:
          description: The updated Creative Template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeTemplate'
components:
  schemas:
    Advertiser:
      $ref: './schemas/advertiser.yaml#/schemas/Advertiser'
    AdvertiserList:
      $ref: './schemas/advertiser.yaml#/schemas/AdvertiserList'
    TrackingPixel:
      $ref: './schemas/advertiser.yaml#/schemas/TrackingPixel'
    Campaign:
      $ref: './schemas/campaign.yaml#/schemas/Campaign'
    CampaignList:
      $ref: './schemas/campaign.yaml#/schemas/CampaignList'
    Flight:
      $ref: './schemas/flight.yaml#/schemas/Flight'
    FlightList:
      $ref: './schemas/flight.yaml#/schemas/FlightList'
    Ad:
      $ref: './schemas/ad.yaml#/schemas/Ad'
    AdList:
      $ref: './schemas/ad.yaml#/schemas/AdList'
    TrackingDetails:
      $ref: './schemas/ad.yaml#/schemas/TrackingDetails'
    Creative:
      $ref: './schemas/creative.yaml#/schemas/Creative'
    CreativeList:
      $ref: './schemas/creative.yaml#/schemas/CreativeList'
    CreativeTemplate:
      $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'
    CreativeTemplateUpdate:
      $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplateUpdate'
    CreativeTemplateList:
      $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplateList'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Adzerk-ApiKey