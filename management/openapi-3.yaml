openapi: 3.0.1
info:
  title: Adzerk Management API
  description: Adzerk Management API
  version: '1.0'
servers:
  - url: 'https://api.adzerk.net'
tags:
  - name: advertisers
    description: Manage Advertisers
  - name: campaigns
    description: Manage Campaigns
  - name: flights
    description: Manage Flights
  - name: creatives
    description: Manage Creatives
  - name: ads
    description: Manage Ads (Creative/Flight Maps)
  - name: creative templates
    description: Manage Creative Templates
  - name: flight categories
    description: Flight Categories
  - name: site zone targeting
    description: Site/Zone Targeting
  - name: geo targeting
    description: Geo Targeting
  - name: channels
    description: Channels
  - name: sites
    description: Sites
  - name: channel site maps
    description: Channel Site Maps
  - name: zones
    description: Zones
  - name: ad types
    description: Ad Types
  - name: priorities
    description: Priorities
paths:
  /v1/advertiser:
    post:
      tags:
        - advertisers
      description: Create Advertiser
      operationId: createAdvertiser
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Advertiser Created
          content:
            application/json:
              schema:
                $ref: './schemas/advertiser.yaml#/schemas/Advertiser'
    get:
      tags:
        - advertisers
      description: List Advertisers
      operationId: listAdvertisers
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: Paged list of Advertisers
          content:
            application/json:
              schema:
                $ref: './schemas/advertiser.yaml#/schemas/AdvertiserList'
  '/v1/advertiser/{advertiserId}':
    parameters:
      - name: advertiserId
        in: path
        description: Id of the Advertiser to update
        required: true
        schema:
          type: integer
    put:
      tags:
        - advertisers
      description: Update Advertiser
      operationId: updateAdvertiser
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Updated Advertiser
          content:
            application/json:
              schema:
                $ref: './schemas/advertiser.yaml#/schemas/Advertiser'
    get:
      tags:
        - advertisers
      description: Get a single Advertiser by Id
      operationId: getAdvertiser
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Advertiser
          content:
            application/json:
              schema:
                $ref: './schemas/advertiser.yaml#/schemas/Advertiser'
  /v1/advertiser/search:
    post:
      tags:
        - advertisers
      description: Search Advertisers
      operationId: searchAdvertisers
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: './schemas/advertiser.yaml#/schemas/AdvertiserSearch'
      responses:
        200:
          description: Paged list of Advertisers
          content:
            application/json:
              schema:
                $ref: './schemas/advertiser.yaml#/schemas/AdvertiserList'
  '/v1/advertiser/{advertiserId}/trackingCode':
    get:
      tags:
        - advertisers
      description: Get Tracking Code for an Advertiser
      operationId: getTrackingCode
      security:
        - ApiKeyAuth: []
      parameters:
        - name: advertiserId
          in: path
          description: Id of the Advertiser to generate Tracking Code for
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Tracking Code
          content:
            application/json:
              schema:
                $ref: './schemas/advertiser.yaml#/schemas/TrackingPixel'
  /v1/campaign:
    post:
      tags:
        - campaigns
      description: Create Campaign
      operationId: createCampaign
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Campaign Created
          content:
            application/json:
              schema:
                $ref: './schemas/campaign.yaml#/schemas/Campaign'
    get:
      tags:
        - campaigns
      description: List Campaigns
      operationId: listCampaigns
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: Paged list of Campaigns
          content:
            application/json:
              schema:
                $ref: './schemas/campaign.yaml#/schemas/CampaignList'
  '/v1/campaign/{campaignId}':
    put:
      tags:
        - campaigns
      description: Update Campaign
      operationId: updateCampaign
      security:
        - ApiKeyAuth: []
      parameters:
        - name: campaignId
          in: path
          description: Id of the Campaign to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Updated Campaign
          content:
            application/json:
              schema:
                $ref: './schemas/campaign.yaml#/schemas/Campaign'
    get:
      tags:
        - campaigns
      description: Get a single Campaign by Id
      operationId: getCampaign
      security:
        - ApiKeyAuth: []
      parameters:
        - name: campaignId
          in: path
          description: Id of the Campaign to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The Campaign
          content:
            application/json:
              schema:
                $ref: './schemas/campaign.yaml#/schemas/Campaign'
  /v1/campaign/search:
    post:
      tags:
        - campaigns
      description: Search Campaigns
      operationId: searchCampaigns
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: './schemas/campaign.yaml#/schemas/CampaignSearch'
      responses:
        200:
          description: Paged list of Campaigns
          content:
            application/json:
              schema:
                $ref: './schemas/campaign.yaml#/schemas/CampaignList'
  '/v1/campaign/{campaignId}/flight':
    get:
      tags:
        - flights
      description: List Flights For a Campaign
      operationId: listFlightsForCampaign
      security:
        - ApiKeyAuth: []
      parameters:
        - name: campaignId
          in: path
          description: Id of the Campaign to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Paged list of Flights
          content:
            application/json:
              schema:
                $ref: './schemas/flight.yaml#/schemas/FlightList'
  /v1/flight:
    post:
      tags:
        - flights
      description: Create Flight
      operationId: createFlight
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Flight Created
          content:
            application/json:
              schema:
                $ref: './schemas/flight.yaml#/schemas/Flight'
    get:
      tags:
        - flights
      description: List Flights
      operationId: listFlights
      security:
        - ApiKeyAuth: []
      parameters:
        - name: isArchived
          in: query
          description: Set to `true` if you only want archived Flights
          required: false
          schema:
            type: boolean
            nullable: true
        - name: isActive
          in: query
          description: Set to `true` if you only want active Flights
          required: false
          schema:
            type: boolean
            nullable: true
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: Paged list of Flights
          content:
            application/json:
              schema:
                $ref: './schemas/flight.yaml#/schemas/FlightList'
  '/v1/flight/{flightId}':
    parameters:
      - name: flightId
        in: path
        description: Id of the Flight to update
        required: true
        schema:
          type: integer
    put:
      tags:
        - flights
      description: Update Flight
      operationId: updateFlight
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Updated Flight
          content:
            application/json:
              schema:
                $ref: './schemas/flight.yaml#/schemas/Flight'
    get:
      tags:
        - flights
      description: Get Flight
      operationId: getFlight
      security:
        - ApiKeyAuth: []
      parameters:
        - name: excludeAds
          in: query
          description: Flag to exclude Ads (Creative/Flight Maps) from the results
          schema:
            type: boolean
      responses:
        200:
          description: The Flight
          content:
            application/json:
              schema:
                $ref: './schemas/flight.yaml#/schemas/Flight'
  '/v1/fast/flight':
    get:
      tags:
        - flights
      description: Filtered Flights
      operationId: filterFlights
      security:
        - ApiKeyAuth: []
      parameters:
        - name: isActive
          in: query
          schema:
            type: boolean
        - name: isArchived
          in: query
          schema:
            type: boolean
        - name: beforeStartDate
          in: query
          schema:
            type: string
            format: date-time
        - name: afterStartDate
          in: query
          schema:
            type: string
            format: date-time
        - name: beforeEndDate
          in: query
          schema:
            type: string
            format: date-time
        - name: afterEndDate
          in: query
          schema:
            type: string
            format: date-time
        - name: NoEndDate
          in: query
          schema:
            type: boolean
        - name: name
          in: query
          schema:
            type: string
        - name: nameContains
          in: query
          schema:
            type: string
      responses:
        200:
          description: Line-delimited JSON objects
          content:
            text:
              schema:
                type: string
  /v1/creative:
    post:
      tags:
        - creatives
      description: Create Creative
      operationId: createCreative
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Creative Created
          content:
            application/json:
              schema:
                $ref: './schemas/creative.yaml#/schemas/Creative'
  '/v1/creative/{CreativeId}/upload':
    post:
      tags:
        - creatives
      description: Upload Creative Image
      operationId: uploadCreativeImage
      security:
        - ApiKeyAuth: []
      parameters:
        - name: CreativeId
          in: path
          description: The Id of the Creative to upload an image for
          required: true
          schema:
            type: integer
            format: int32
        - name: sizeOverride
          in: query
          description: Add this to upload an image that is a different dimension than the creative's `adTypeId`
          schema:
            type: boolean
        - name: fieldName
          in: query
          description: Specifies which image field (of Type `File`) the file will be uploaded to. Can be used with single-image and multiple-image templates. If a template has only one image, `fieldName` is not required.
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Creative Updated
          content:
            application/json:
              schema:
                $ref: './schemas/creative.yaml#/schemas/Creative'
  '/v1/creative/{CreativeId}':
    parameters:
      - name: CreativeId
        in: path
        description: The Id of the Creative to update
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - creatives
      description: Update Creative
      operationId: updateCreative
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Creative Updated
          content:
            application/json:
              schema:
                $ref: './schemas/creative.yaml#/schemas/Creative'
    get:
      tags:
        - creatives
      description: Get Creative
      operationId: getCreative
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The requested Creative
          content:
            application/json:
              schema:
                $ref: './schemas/creative.yaml#/schemas/Creative'
  '/v1/advertiser/{AdvertiserId}/creatives':
    get:
      tags:
        - creatives
      description: List Creatives for Advertiser
      operationId: listCreativesForAdvertiser
      security:
        - ApiKeyAuth: []
      parameters:
        - name: AdvertiserId
          in: path
          description: Advertiser Id to list Creatives for
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: Paged list of Creatives for the Advertiser
          content:
            application/json:
              schema:
                $ref: './schemas/creative.yaml#/schemas/CreativeList'
  '/v1/flight/{flightId}/creative':
    parameters:
      - name: flightId
        in: path
        description: The Flight to be mapped
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - ads
      description: Create new Ad
      operationId: createAd
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Ad
          content:
            application/json:
              schema:
                $ref: './schemas/ad.yaml#/schemas/Ad'
  '/v1/flight/{flightId}/creatives':                
    get:
      tags:
        - ads
      description: List Ads for a Flight
      operationId: listAdsForFlight
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: The Flight to be mapped
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Ads
          content:
            application/json:
              schema:
                $ref: './schemas/ad.yaml#/schemas/AdList'
  '/v1/flight/{flightId}/creative/{adId}':
    put:
      tags:
        - ads
      description: Update an existing Ad
      operationId: updateAd
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          in: path
          description: The Id of the Flight for the Ad to be updated
          required: true
          schema:
            type: integer
            format: int32
        - name: adId
          in: path
          description: The Id of the Ad to be updated
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Ad
          content:
            application/json:
              schema:
                $ref: './schemas/ad.yaml#/schemas/Ad'
  '/v1/ad/{adId}':
    get:
      tags:
        - ads
      description: Get an existing Ad
      operationId: getAd
      security:
        - ApiKeyAuth: []
      parameters:
        - name: adId
          in: path
          description: The Id of the Ad to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The existing Ad
          content:
            application/json:
              schema:
                $ref: './schemas/ad.yaml#/schemas/Ad'
  '/v1/ad/{adId}/tracking-urls':
    get:
      tags:
        - ads
      description: Get the tracking pixel and click Url for an Ad
      operationId: getAdTrackingUrls
      security:
        - ApiKeyAuth: []
      parameters:
        - name: adId
          in: path
          description: The Id of the Ad to get
          required: true
          schema:
            type: integer
            format: int32
        - name: siteId
          in: query
          description: The site in your network where the impression and/or click should be tracked. The site must be eligible to serve the ad (i.e. the ad's flight belongs to a channel the site is associated with).
          schema:
            type: integer
            format: int32
        - name: zoneId
          in: query
          description: An optional zone where the impression and/or click should be tracked. Must belong to the `siteid`.
          schema:
            type: integer
            format: int32
        - name: keywords
          in: query
          description: A comma separated string of keywords, like `foo,bar,baz`, that will be tracked in reporting with the click and/or impression. Keywords must not contain [disallowed characters defined in the keyword documentation](https://dev.adzerk.com/docs/keyword-targeting#section-keywords-and-special-characters).
          schema:
            type: string
      responses:
        200:
          description: The requested tracking urls
          content:
            application/json:
              schema:
                $ref: './schemas/ad.yaml#/schemas/TrackingDetails'
  '/v2/creative-templates':
    post:
      tags:
        - creative templates
      description: Create new Creative Template
      operationId: createCreativeTemplate
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Creative Template
          content:
            application/json:
              schema:
                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'
    get:
      tags:
        - creative templates
      description: List Creative Templates
      operationId: listCreativeTemplates
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Creative Templates
          content:
            application/json:
              schema:
                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplateList'
  '/v2/creative-templates/{creativeTemplateId}':
    get:
      tags:
        - creative templates
      description: Get an existing Creative Template
      operationId: getCreativeTemplate
      security:
        - ApiKeyAuth: []
      parameters:
        - name: creativeTemplateId
          in: path
          description: The Id of the Creative Template to update
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The Creative Template
          content:
            application/json:
              schema:
                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'
  '/v2/creative-templates/{creativeTemplateId}/update':
    post:
      tags:
        - creative templates
      description: Update an existing Creative Template
      operationId: updateCreativeTemplate
      security:
        - ApiKeyAuth: []
      parameters:
        - name: creativeTemplateId
          in: path
          description: The Id of the Creative Template to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Creative Template
          content:
            application/json:
              schema:
                $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplate'
  '/v1/flight/{flightId}/category':
    post:
      tags:
        - flight categories
      operationId: createFlightCategory
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          description: The Flight Id to create the Category for
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Flight Category
          content:
            application/json:
              schema:
                $ref: './schemas/flight-category.yaml#/schemas/FlightCategory'
  '/v1/flight/{flightId}/categories':
    get:
      tags:
        - flight categories
      operationId: getFlightCategoriesForFlight
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          description: The Flight Id to get the Categories for
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Flight Categories
          content:
            application/json:
              schema:
                $ref: './schemas/flight-category.yaml#/schemas/FlightCategoryList'
  /v1/categories:
    get:
      tags:
        - flight categories
      operationId: getFlightCategories
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Flight Categories
          content:
            application/json:
              schema:
                $ref: './schemas/flight-category.yaml#/schemas/FlightCategoryList'
  '/v1/flight/{flightId}/category/{flightCategoryId}/delete':
    get:
      tags:
        - flight categories
      operationId: deleteFlightCategory
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          description: The Flight Id to delete the Category for
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: flightCategoryId
          description: The Flight Category Id to delete
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: "Successfully Deleted"
  '/v1/flight/{flightId}/sitezonetargeting':
    post:
      tags:
        - site zone targeting
      operationId: createSiteZoneTargeting
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          description: The Flight Id to create the Site Zone Targeting for
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Site/Zone Targeting
          content:
            application/json:
              schema:
                $ref: './schemas/site-zone.yaml#/schemas/SiteZone'
  '/v1/flight/{flightId}/sitezonetargeting/{siteZoneTargetingId}':
    parameters:
      - name: flightId
        description: The Flight Id to update the Site Zone Targeting for
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: siteZoneTargetingId
        description: The Id of the Site Zone Targeting to update
        in: path
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - site zone targeting
      operationId: updateSiteZoneTargeting
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly updated Site/Zone Targeting
          content:
            application/json:
              schema:
                $ref: './schemas/site-zone.yaml#/schemas/SiteZone'
    get:
      tags:
        - site zone targeting
      operationId: getSiteZoneTargeting
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Site/Zone Targeting
          content:
            application/json:
              schema:
                $ref: './schemas/site-zone.yaml#/schemas/SiteZone'
  '/v1/flight/{flightId}/sitezonetargeting/{siteZoneTargetingId}/delete':
    parameters:
      - name: flightId
        description: The Flight Id to update the Site Zone Targeting for
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: siteZoneTargetingId
        description: The Id of the Site Zone Targeting to update
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - site zone targeting
      operationId: deleteSiteZoneTargeting
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Successfully Deleted
  '/v1/flight/{flightId}/geotargeting':
    post:
      tags:
        - geo targeting
      operationId: createGeoTarget
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          description: The Flight Id to update the Site Zone Targeting for
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Geo Target
          content:
            application/json:
              schema:
                $ref: './schemas/geo-target.yaml#/schemas/GeoTarget'
  '/v1/flight/{flightId}/geotargeting/{locationId}':
    parameters:
      - name: flightId
        description: The Flight Id to update the Site Zone Targeting for
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        description: The Id of the Site Zone Targeting to update
        in: path
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - geo targeting
      operationId: updateGeoTarget
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Geo Target
          content:
            application/json:
              schema:
                $ref: './schemas/geo-target.yaml#/schemas/GeoTarget'
    get:
      tags:
        - geo targeting
      operationId: getGeoTarget
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Geo Target
          content:
            application/json:
              schema:
                $ref: './schemas/geo-target.yaml#/schemas/GeoTarget'
  '/v1/flight/{flightId}/geotargeting/{locationId}/delete':
    get:
      tags:
        - geo targeting
      operationId: deleteGeoTarget
      security:
        - ApiKeyAuth: []
      parameters:
        - name: flightId
          description: The Flight Id to update the Site Zone Targeting for
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: locationId
          description: The Id of the Site Zone Targeting to update
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully Deleted
  /v1/countries:
    get:
      tags:
        - geo targeting
      operationId: listCountries
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: A list of countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/geo-target.yaml#/schemas/Country'
  '/v1/country/{countryCode}/regions?version=2':
    get:
      tags:
        - geo targeting
      operationId: listRegionsForCountry
      security:
        - ApiKeyAuth: []
      parameters:
        - name: countryCode
          description: The Country Code to list Regions for
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A country with Regions included
          content:
            application/json:
              schema:
                $ref: './schemas/geo-target.yaml#/schemas/Country'
  '/v1/region/{regionCode}':
    get:
      tags:
        - geo targeting
      operationId: listMetroCodesInRegion
      security:
        - ApiKeyAuth: []
      parameters:
        - name: regionCode
          description: The Region Code to get Metros for
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of Metros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/geo-target.yaml#/schemas/Metro'
  /v1/channel:
    post:
      tags:
        - channels
      operationId: createChannel
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created channel
          content:
            application/json:
              schema:
                $ref: './schemas/channel.yaml#/schemas/Channel'
    get:
      tags:
        - channels
      operationId: listChannels
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Channels
          content:
            application/json:
              schema:
                $ref: './schemas/channel.yaml#/schemas/ChannelList'

  '/v1/channel/{channelId}':
    parameters:
      - name: channelId
        description: The Channel Id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - channels
      operationId: updateChannel
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Channel
          content:
            application/json:
              schema:
                $ref: './schemas/channel.yaml#/schemas/Channel'
    get:
      tags:
        - channels
      operationId: getChannel
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Channel
          content:
            application/json:
              schema:
                $ref: './schemas/channel.yaml#/schemas/Channel'
  '/v1/channel/{channelId}/priorities':
    get:
      tags:
        - channels
      operationId: getPrioritiesForChannel
      security:
        - ApiKeyAuth: []
      parameters:
        - name: channelId
          in: path
          description: The Channel Id to get Priorities for
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A list of Priorities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/priority.yaml#/schemas/Priority'
  '/v1/channel/{channelId}/delete':
    get:
      tags:
        - channels
      operationId: deleteChannel
      security:
        - ApiKeyAuth: []
      parameters:
        - name: channelId
          in: path
          description: The Channel Id to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully Deleted
  /v1/site:
    post:
      tags:
        - sites
      operationId: createSite
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Site
          content:
            application/json:
              schema:
                $ref: './schemas/site.yaml#/schemas/Site'
    get:
      tags:
        - sites
      operationId: listSites
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Sites
          content:
            application/json:
              schema:
                $ref: './schemas/site.yaml#/schemas/SiteList'
  '/v1/site/{siteId}':
    parameters:
      - name: siteId
        in: path
        description: The Site Id
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - sites
      operationId: updateSite
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Site
          content:
            application/json:
              schema:
                $ref: './schemas/site.yaml#/schemas/Site'
    get:
      tags:
        - sites
      operationId: getSite
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Site
          content:
            application/json:
              schema:
                $ref: './schemas/site.yaml#/schemas/Site'
  /v1/fast/site:
    get:
      tags:
        - sites
      operationId: filterSites
      security:
        - ApiKeyAuth: []
      parameters:
        - name: titleLike
          in: query
          description: Filters the stream of sites based on the Title. This is a simple match - if the string provided in the query parameter is present anywhere in a site's Title, that site will be returned in the results.
          required: false
          schema:
            type: string
            nullable: true
        - name: urlLike
          in: query
          description: Filters the stream of sites based on the Url. This is a simple match - if the string provided in the query parameter is present anywhere in a site's Url, that site will be returned in the results.
          required: false
          schema:
            type: string
            nullable: true
      responses:
        200:
          description: A line-delimited string of JSON encoded sites
          content:
            text:
              schema:
                type: string
  /v1/channelSite:
    post:
      tags:
        - channel site maps
      operationId: createChannelSiteMap
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Channel/Site Map
          content:
            application/json:
              schema:
                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMap'
    get:
      tags:
        - channel site maps
      operationId: listChannelSiteMaps
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Channel/Site Maps
          content:
            application/json:
              schema:
                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMapList'
    put:
      tags:
        - channel site maps
      operationId: updateChannelSiteMap
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Channel/Site Map
          content:
            application/json:
              schema:
                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMap'
  '/v1/channel/{channelId}/site/{siteId}':
    get:
      tags:
        - channel site maps
      operationId: getChannelSiteMap
      security:
        - ApiKeyAuth: []
      parameters:
        - name: channelId
          in: path
          description: The Channel Id
          required: true
          schema:
            type: integer
            format: int32
        - name: siteId
          in: path
          description: The Site Id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: The Channel/Site Map
          content:
            application/json:
              schema:
                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelSiteMap'
  '/v1/channelsInSite/{siteId}':
    get:
      tags:
        - channel site maps
      operationId: listChannelsForSite
      security:
        - ApiKeyAuth: []
      parameters:
        - name: siteId
          in: path
          description: The Site Id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A list of Channel Ids
          content:
            application/json:
              schema:
                $ref: './schemas/channel-site-map.yaml#/schemas/ChannelList'
  '/v1/channel/{channelId}/site/{siteId}/delete':
    get:
      tags:
        - channel site maps
      operationId: deleteChannelSiteMap
      security:
        - ApiKeyAuth: []
      parameters:
        - name: channelId
          in: path
          description: The Channel Id
          required: true
          schema:
            type: integer
            format: int32
        - name: siteId
          in: path
          description: The Site Id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully Deleted
  /v1/zone:
    post:
      tags:
        - zones
      operationId: createZone
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Zone
          content:
            application/json:
              schema:
                $ref: './schemas/zone.yaml#/schemas/Zone'
    get:
      tags:
        - zones
      operationId: listZones
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: The newly created Zone
          content:
            application/json:
              schema:
                $ref: './schemas/zone.yaml#/schemas/ZoneList'
  '/v1/zone/{zoneId}':
    parameters:
      - name: zoneId
        in: path
        description: The Site Id
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - zones
      operationId: getZone
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Zone
          content:
            application/json:
              schema:
                $ref: './schemas/zone.yaml#/schemas/Zone'
    put:
      tags:
        - zones
      operationId: updateZone
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated Zone
          content:
            application/json:
              schema:
                $ref: './schemas/zone.yaml#/schemas/Zone'
  /v1/adtypes:
    post:
      tags:
        - ad types
      operationId: createAdType
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Ad Type
          content:
            application/json:
              schema:
                $ref: './schemas/ad-type.yaml#/schemas/AdType'
    get:
      tags:
        - ad types
      operationId: listAdTypes
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Ad Types
          content:
            application/json:
              schema:
                $ref: './schemas/ad-type.yaml#/schemas/AdTypeList'
  '/v1/channel/{channelId}/adtypes':
    parameters:
      - name: channelId
        in: path
        description: The Channel Id
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - ad types
      operationId: createAdTypeForChannel
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created Ad Type
          content:
            application/json:
              schema:
                $ref: './schemas/ad-type.yaml#/schemas/AdType'
    get:
      tags:
        - ad types
      operationId: listAdTypesForChannel
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of Ad Types
          content:
            application/json:
              schema:
                $ref: './schemas/ad-type.yaml#/schemas/AdTypeList'
  '/v1/adtypes/{adTypeId}/delete':
    get:
      tags:
        - ad types
      operationId: deleteAdType
      security:
        - ApiKeyAuth: []
      parameters:
        - name: adTypeId
          in: path
          description: The Ad Type Id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully Deleted
  '/v1/channel/{channelId}/adtypes/{adTypeId}/delete':
    get:
      tags:
        - ad types
      operationId: deleteAdTypeForChannel
      security:
        - ApiKeyAuth: []
      parameters:
        - name: channelId
          in: path
          description: The Channel Id
          required: true
          schema:
            type: integer
            format: int32
        - name: adTypeId
          in: path
          description: The Ad Type Id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully Deleted
  /v1/priority:
    post:
      tags:
        - priorities
      operationId: createPriority
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The newly created priority
          content:
            application/json:
              schema:
                $ref: './schemas/priority.yaml#/schemas/Priority'
    get:
      tags:
        - priorities
      operationId: listPriorities
      security:
        - ApiKeyAuth: []
      parameters:
        - name: pageSize
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: page
          in: query
          description: The page number to be returned
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A paged list of the Priorities
          content:
            application/json:
              schema:
                $ref: './schemas/priority.yaml#/schemas/PriorityList'
  '/v1/priority/{priorityId}':
    parameters:
      - name: priorityId
        in: path
        description: The Channel Id
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - priorities
      operationId: getPriority
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: The Priority
          content:
            application/json:
              schema:
                $ref: './schemas/priority.yaml#/schemas/Priority'
    put:
      tags:
        - priorities
      operationId: updatePriority
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: The updated priority
          content:
            application/json:
              schema:
                $ref: './schemas/priority.yaml#/schemas/Priority'
  '/v1/priority/{priorityId}/delete':
    get:
      tags:
        - priorities
      operationId: deletePriority
      security:
        - ApiKeyAuth: []
      parameters:
        - name: priorityId
          in: path
          description: The Channel Id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully Deleted

components:
  schemas:
    CreativeTemplateUpdate:
      $ref: './schemas/creative-template.yaml#/schemas/CreativeTemplateUpdate'
  securitySchemes:
    ApiKeyAuth:
      $ref: './components/security-schemes.yaml#/components/securitySchemes/ApiKeyAuth'